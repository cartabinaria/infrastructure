- name: Define Go Version
  ansible.builtin.set_fact:
    go_version: 1.20.2

- name: Install acl, git
  become: yes
  ansible.builtin.package:
    name:
      - acl 
      - git
    state: latest
    update_cache: yes

- name: Create the bot user
  become: yes
  ansible.builtin.user:
    state: present
    system: true
    name: bot
    home: /opt/bot
    shell: /usr/sbin/nologin

- name: Check if go is installed
  become: yes
  ansible.builtin.stat:
    path: /opt/bot/go
  register: go_installed

- name: Install Go Binary
  become: yes
  become_user: bot
  ansible.builtin.unarchive:
    src: "https://go.dev/dl/go{{ go_version }}.linux-amd64.tar.gz"
    dest: /opt/bot
    remote_src: yes
  when: not go_installed.stat.exists

- name: Clone a github repository
  become: yes
  become_user: bot
  ansible.builtin.git:
    repo: "https://github.com/csunibo/informabot"
    dest: /opt/bot/source
    version: main
  register: git_result

- name: Read the bot token
  ansible.builtin.set_fact:
    bot_token: "{{ lookup('file', 'passwords/bot_token') }}"

- name: Build GoBot
  become: yes
  become_user: bot
  ansible.builtin.shell:
    chdir: /opt/bot/source
    cmd: /opt/bot/go/bin/go build -o /opt/bot/bot main.go
  when: git_result.changed

- name: Copy the systemd service
  become: yes
  ansible.builtin.template:
    src: files/bot/bot.service.j2
    dest: /etc/systemd/system/bot.service

- name: Reload the systemd daemon
  become: yes
  ansible.builtin.service:
    daemon_reload: true

- name: Start and enable the bot service
  become: yes
  ansible.builtin.service:
    name: bot 
    state: started 
    enabled: yes
  when: not git_result.changed


- name: Restart and enable the bot service
  become: yes
  ansible.builtin.service:
    name: bot 
    state: restarted 
    enabled: yes
  when: git_result.changed
    
  
