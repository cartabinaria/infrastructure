- name: Set timezone to Europe/Rome
  become: true
  community.general.timezone:
    name: Europe/Rome

- name: Install acl, libcap2-bin, git
  become: true
  ansible.builtin.package:
    name:
      - acl # needed to become the calendar user
      - libcap2-bin # to set the capabilities for the go binary
      - git
    state: latest
    update_cache: true

- name: Create the calendar user
  become: true
  ansible.builtin.user:
    state: present
    system: true
    name: calendar
    home: /opt/calendar
    shell: /bin/bash

- name: Define Go Version
  ansible.builtin.set_fact:
    go_version: 1.22.1

- name: Clone the UniboCalendar project
  become: true
  become_user: calendar
  ansible.builtin.git:
    repo: https://github.com/cartabinaria/unibocalendar
    dest: /opt/calendar/source
    version: main
    single_branch: true
  register: git_result

- name: Install pnpm
  become: true
  become_user: calendar
  block:
    - name: Check for pnpm
      ansible.builtin.stat:
        path: /opt/calendar/.local/share/pnpm
      register: pnpm_folder

    - name: Install pnpm
      ansible.builtin.shell: |
        curl -fsSL https://get.pnpm.io/install.sh | sh -
      when: not pnpm_folder.stat.exists

    - name: Update pnpm
      ansible.builtin.shell:
        cmd: /opt/calendar/.local/share/pnpm/pnpm self-update
        chdir: /opt/calendar/
      when: pnpm_folder.stat.exists
      register: pnpm_update_result
      changed_when: not pnpm_update_result.stdout is search('doesn\'t need an update')

- name: Build with pnpm
  become: true
  become_user: calendar
  block:
    - name: Install the dependencies with pnpm
      ansible.builtin.shell: |
        /opt/calendar/.local/share/pnpm/pnpm install --frozen-lockfile
      args:
        chdir: /opt/calendar/source
        executable: /bin/bash
      register: pnpm_install_result
      changed_when: not pnpm_install_result.stdout is search('Already up to date')

    - name: Run css:build with pnpm
      ansible.builtin.shell: |
        /opt/calendar/.local/share/pnpm/pnpm run css:build
      args:
        chdir: /opt/calendar/source
        executable: /bin/bash

- name: Install go
  block:
    - name: Check if go is installed
      become: true
      ansible.builtin.stat:
        path: /opt/calendar/go
      register: go_installed

    - name: Check if go match the required version
      when: go_installed.stat.exists
      block:
        - name: Get the installed version
          become: true
          ansible.builtin.command: /opt/calendar/go/bin/go version
          register: go_installed_version

        - name: Remove go dir if the version does not match
          when: not go_installed_version.stdout is search(go_version)
          become: true
          ansible.builtin.file:
            path: /opt/calendar/go
            state: absent

    - name: Download and extract go
      become: true
      become_user: calendar
      ansible.builtin.unarchive:
        src: "https://go.dev/dl/go{{ go_version }}.linux-amd64.tar.gz"
        dest: /opt/calendar
        remote_src: true
      when: |
        (not go_installed.stat.exists) or
        (not go_installed_version.stdout is search(go_version))
      register: go_has_been_reinstalled

- name: Build Calendar with go
  # when: git_result.changed or go_has_been_reinstalled.changed|default('false')
  become: true
  become_user: calendar
  ansible.builtin.shell:
    chdir: /opt/calendar/source
    cmd: /opt/calendar/go/bin/go build
  args:
    chdir: /opt/calendar/source
    executable: /bin/bash
  register: bot_has_been_built

- name: Allow the go binary to listen on low ports
  become: true
  ansible.builtin.shell: |
    setcap 'cap_net_bind_service=+ep' /opt/calendar/source/unibocalendar

- name: Copy the systemd service
  become: true
  ansible.builtin.template:
    src: files/calendar/calendar.service.j2
    dest: /etc/systemd/system/calendar.service

- name: Reload the systemd daemon
  become: true
  ansible.builtin.service:
    daemon_reload: true

- name: Restart and enable the calendar service
  become: true
  ansible.builtin.service:
    name: calendar
    state: restarted
    enabled: true
